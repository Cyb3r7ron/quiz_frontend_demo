---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

// tried axios
import axios from 'axios';


const quiz = await fetch('http://localhost:5000/api/v1/quiz');
const quizData = await quiz.json();
const randomQuiz = quizData.results;

//tired mapping
const re = await axios.get('http://localhost:5000/api/v1/quiz');
const datas = re.data;
const questionObj = datas.data;


// tried apicontext
//GET requests with a message that includes the URL path
import type { APIContext } from 'astro';

export function get({ request }: APIContext) {
const url = 'http://localhost:5000/api/v1/quiz';
  return {
    body: `Hello ${url}`
  }
}





---

			
<Layout title="Welcome to Astro.">
	<main>	
		<h1>Welcome to <span class="text-gradient">{randomQuiz}</span></h1>
		<h1>Welcome to <span class="text-gradient">{randomQuiz.location.first}</span></h1>
		<h1>Supppp<span class="text-gradient"></span></h1>

		<p class="instructions">
		{datas.data.quizHolder.question}		
		{questionObj.question}		
		{questionObj.map((p)=>{
			return (p.quizHolder.question)
		})}
		</p>
		<ul role="list" class="link-card-grid">
			<Card
				href="https://docs.astro.build/"
				title="Documentation"
				body="Learn how Astro works and explore the official API docs."
			/>
			<Card
				href="https://astro.build/integrations/"
				title="Integrations"
				body="Supercharge your project with new frameworks and libraries."
			/>
			<Card
				href="https://astro.build/themes/"
				title="Themes"
				body="Explore a galaxy of community-built starter themes."
			/>
			<Card
				href="https://astro.build/chat/"
				title="Community"
				body="Come say hi to our amazing Discord community. ❤️"
			/>
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
